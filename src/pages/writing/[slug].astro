---
import { ghostClient } from '../../lib/ghost';
import Layout from '../../layouts/Layout.astro';
import { formatDate } from '../../lib/format_date';
import { createHash } from '../../lib/createHash';
export async function getStaticPaths() {
    const posts = await ghostClient.posts
        .browse({
            filter: 'tag:writing',
            include: ['authors'],
            limit: 'all',
        })
        .catch((err) => {
            console.error(err);
        }) || [];
    return posts.map((post) => {
        return {
            params: {
                slug: post.slug,
            },
            props: {
                post: post,
            },
        };
    });
}
const { post } = Astro.props;
const hash = await createHash(Astro.url.toString());
---
<Layout title="Posts" postTitle={post.title}>
    <main>
      <article class="outlined">
        <h2>{post.title}</h2>
        <div class="post-meta">
          <time datetime={post.published_at}>
            {formatDate(post.published_at)}
          </time>
          <span class="author">by {post.authors?.[0]?.name}</span>
        </div>
        <Fragment set:html={post.html} />
      </article>
      <section class="outlined">
        <h1>comments</h1>
        <div id="cusdis_thread"
          data-host="https://cusdis.com"
          data-app-id="02bf931f-c6ff-4b68-b0ec-d15ae20e3b30"
          data-page-id={hash}
          data-page-url={Astro.url}
          data-page-title={post.title}
			></div>
    </section>
    </main>
</Layout>

<style>
  .post-meta {
    display: flex;
    gap: 0.5rem;
    align-items: center;
    font-size: 0.9rem;
    color: var(--nc-text-secondary);
    margin-bottom: 1rem;
  }

  .post-meta time {
    font-family: monospace;
  }

  .post-meta .author {
    position: relative;
    padding-left: 0.5rem;
  }

  .post-meta .author::before {
    content: "â€¢";
    position: absolute;
    left: -0.25rem;
  }
</style>